name: Build, Tag, and Release

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Needed for accessing full git history

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install XML tools
        run: sudo apt-get update && sudo apt-get install -y libxml2-utils gh

      - name: Extract version from pom.xml
        id: get_version
        run: |
          VERSION=$(xmllint --xpath "//*[local-name()='project']/*[local-name()='version']/text()" pom.xml)
          echo "Version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Authenticate GitHub CLI
        run: echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      - name: Create GitHub Tag and Release
        env:
          VERSION: ${{ steps.get_version.outputs.version }}
        run: |
          TAG="v$VERSION"

          # Exit if the tag already exists
          if git rev-parse "$TAG" >/dev/null 2>&1; then
            echo "Tag $TAG already exists. Skipping release."
            exit 0
          fi

          echo "Creating release for $TAG"

          # Generate changelog from commits since last tag
          LAST_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          if [ -z "$LAST_TAG" ]; then
            CHANGELOG=$(git log --pretty=format:"- %s")
          else
            CHANGELOG=$(git log "$LAST_TAG"..HEAD --pretty=format:"- %s")
          fi

          echo "$CHANGELOG" > changelog.txt

          # Create tag and release via GitHub CLI
          gh release create "$TAG" --title "$TAG" --notes-file changelog.txt

          # Upload JAR file(s) to the release
          JAR_FILE=$(find target -name "*.jar" | head -n 1)
          if [ -f "$JAR_FILE" ]; then
            echo "Uploading JAR file: $JAR_FILE"
            gh release upload "$TAG" "$JAR_FILE"
          else
            echo "No .jar file found in target/"
            exit 1
          fi
